`timescale 1ns/1ps

module tb_password_checker;

    reg clk;
    reg reset;
    reg [7:0] char_in;
    reg char_valid;
    wire password_match;

    password_checker uut (
        .clk(clk),
        .reset(reset),
        .char_in(char_in),
        .char_valid(char_valid),
        .password_match(password_match)
    );

    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 100MHz clock
    end

    task send_char(input [7:0] c);
        begin
            char_in = c;
            char_valid = 1;
            @(posedge clk);
            char_valid = 0;
            @(posedge clk);
        end
    endtask

    initial begin
        reset = 1; char_in = 0; char_valid = 0;
        @(posedge clk);
        reset = 0;

        // Send correct password "1234"
        send_char("1");
        send_char("2");
        send_char("3");
        send_char("4");

        #10;
        if (password_match) $display("Password Matched!");

        // Send wrong password "1244"
        send_char("1");
        send_char("2");
        send_char("4");
        send_char("4");

        #10;
        if (!password_match) $display("Password Mismatch!");

        $stop;
    end

endmodule
